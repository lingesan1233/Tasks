=>Start the MongoDB server:
 mongod
=>Open MongoDB shell: 
mongo


=>Create Database & Collections:

use zenclass

db.createCollection("users")
db.createCollection("attendance")
db.createCollection("topics")
db.createCollection("tasks")
db.createCollection("company_drives")
db.createCollection("mentors")

=>Insert Sample Data:
// USERS
db.users.insertMany([
  { _id: ObjectId("6614a1a3e1"), name: "John", email: "john@example.com", mentor_id: ObjectId("6614b1b1e1"), codekata_solved: 120 },
  { _id: ObjectId("6614a1a3e2"), name: "Lily", email: "lily@example.com", mentor_id: ObjectId("6614b1b1e1"), codekata_solved: 85 }
])

// ATTENDANCE
db.attendance.insertMany([
  { user_id: ObjectId("6614a1a3e1"), date: ISODate("2020-10-16"), status: "absent" },
  { user_id: ObjectId("6614a1a3e2"), date: ISODate("2020-10-16"), status: "present" }
])

// TOPICS
db.topics.insertMany([
  { topic_name: "JavaScript", date: ISODate("2020-10-05") },
  { topic_name: "MongoDB", date: ISODate("2020-10-20") }
])

// TASKS
db.tasks.insertMany([
  { user_id: ObjectId("6614a1a3e1"), topic_name: "MongoDB", task_name: "MongoDB Task", submitted: false, date: ISODate("2020-10-20") },
  { user_id: ObjectId("6614a1a3e2"), topic_name: "JavaScript", task_name: "JS Task", submitted: true, date: ISODate("2020-10-05") }
])

// COMPANY DRIVES
db.company_drives.insertMany([
  { company: "Google", date: ISODate("2020-10-21"), students_attended: [ObjectId("6614a1a3e1")] },
  { company: "Amazon", date: ISODate("2020-10-29"), students_attended: [ObjectId("6614a1a3e2")] }
])

// MENTORS
db.mentors.insertOne({
  _id: ObjectId("6614b1b1e1"),
  name: "Mentor A",
  mentees: [
    ObjectId("6614a1a3e1"),
    ObjectId("6614a1a3e2")
  ]
})

-------------------------------------------------------------------------------------------------------


=>MongoDB Queries:
1. Find all the topics and tasks taught in October 2020:

db.topics.find({
  date: { $gte: ISODate("2020-10-01"), $lte: ISODate("2020-10-31") }
})

db.tasks.find({
  date: { $gte: ISODate("2020-10-01"), $lte: ISODate("2020-10-31") }
})
-------------------------------------------------------------------------------------------------------
2. Find all company drives between 15 Oct 2020 to 31 Oct 2020
db.company_drives.find({
  date: { $gte: ISODate("2020-10-15"), $lte: ISODate("2020-10-31") }
})
--------------------------------------------------------------------------------------------------------
3. Find all company drives and the students who attended

db.company_drives.aggregate([
  {
    $lookup: {
      from: "users",
      localField: "students_attended",
      foreignField: "_id",
      as: "attended_students"
    }
  }
])
-------------------------------------------------------------------------------------------------------
4. Find the number of problems solved by each user in CodeKata
db.users.find({}, { name: 1, codekata_solved: 1, _id: 0 })
-------------------------------------------------------------------------------------------------------
 5. Find all mentors who have more than 15 mentees
db.mentors.find({
  $expr: { $gt: [ { $size: "$mentees" }, 15 ] }
})
------------------------------------------------------------------------------------------------------
6. Find the number of users who were absent and task not submitted between 15 Oct â€“ 31 Oct 2020
// First get user_ids who were absent in that date range
let absentUsers = db.attendance.find({
  date: { $gte: ISODate("2020-10-15"), $lte: ISODate("2020-10-31") },
  status: "absent"
}).map(a => a.user_id)

// Then check those users' tasks
db.tasks.find({
  user_id: { $in: absentUsers },
  submitted: false,
  date: { $gte: ISODate("2020-10-15"), $lte: ISODate("2020-10-31") }
}).count()



